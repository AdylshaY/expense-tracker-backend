// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  ID         Int      @id @default(autoincrement())
  FIRST_NAME String
  LAST_NAME  String
  EMAIL      String   @unique
  PASSWORD   String
  ROLE       String   @default("USER")
  CREATED_AT DateTime @default(now())
  UPDATED_AT DateTime @updatedAt

  CATEGORIES Category[]
  BUDGETS    Budget[]
  TOKENS     TokenBlacklist[]
}

model Category {
  ID         Int      @id @default(autoincrement())
  NAME       String
  CREATED_AT DateTime @default(now())
  UPDATED_AT DateTime @updatedAt

  USER_ID Int
  USER    User @relation(fields: [USER_ID], references: [ID], onDelete: Cascade, onUpdate: Cascade)

  TRANSACTIONS Transaction[]
}

model Budget {
  ID          Int      @id @default(autoincrement())
  NAME        String
  DESCRIPTION String?
  BALANCE     Float
  CREATED_AT  DateTime @default(now())
  UPDATED_AT  DateTime @updatedAt

  USER_ID Int
  USER    User @relation(fields: [USER_ID], references: [ID], onDelete: Cascade, onUpdate: Cascade)

  TRANSACTIONS Transaction[]
}

model Transaction {
  ID          Int      @id @default(autoincrement())
  NAME        String
  DESCRIPTION String?
  AMOUNT      Float
  TYPE        String
  DATE        DateTime
  CREATED_AT  DateTime @default(now())
  UPDATED_AT  DateTime @updatedAt

  CATEGORY_ID Int?
  CATEGORY    Category? @relation(fields: [CATEGORY_ID], references: [ID], onDelete: NoAction, onUpdate: NoAction)

  BUDGET_ID Int
  BUDGET    Budget @relation(fields: [BUDGET_ID], references: [ID], onDelete: Cascade, onUpdate: Cascade)
}

model TokenBlacklist {
  ID         Int      @id @default(autoincrement())
  TOKEN      String   @unique
  CREATED_AT DateTime @default(now())
  EXPIRES_AT DateTime

  USER_ID Int
  USER    User @relation(fields: [USER_ID], references: [ID], onDelete: Cascade, onUpdate: Cascade)
}
